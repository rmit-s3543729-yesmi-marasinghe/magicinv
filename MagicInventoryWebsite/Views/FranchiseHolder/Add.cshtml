@model IEnumerable<MagicInventoryWebsite.Models.OwnerInventory>
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Items not in Store";
}
<section>
<h2>Add</h2>


<form method="get">
    <p>
        Product Name: <input name="productName" value="@ViewBag.ProductName" />
        @*hidden field is used to store the Store ID*@
        <input type="hidden" name="storeid" value="@ViewBag.StoreID"  />
        <input type="submit"  value="Filter" />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product.Name)
            </th>
            <th>
                Owner Stock Level
            </th>


            <th></th>
        </tr>
    </thead>
    <tbody>
    @*this code runs through the loop and displays only the current store items,
        this is set using the additional Store table column*@
    @foreach (var item in Model)
    {
        if (SignInManager.IsSignedIn(User))
        {

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Product.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StockLevel)
                </td>


                <td>
                    @if (item.StockLevel > 0)
                    {
                        <a asp-action="StockRequest" asp-route-storeid="@ViewBag.StoreID" asp-route-productid="@item.ProductID">Request Stock</a>
                    }

                </td>
            </tr>
        }
    }
    </tbody>
</table>
</section>